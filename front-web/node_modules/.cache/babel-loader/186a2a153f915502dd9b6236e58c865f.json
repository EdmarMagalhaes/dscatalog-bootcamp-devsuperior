{"ast":null,"code":"var _jsxFileName = \"C:\\\\projetos\\\\dscatalog-bootcamp-devsuperior\\\\front-web\\\\src\\\\pages\\\\Admin\\\\components\\\\Products\\\\Form\\\\index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useForm, Controller } from 'react-hook-form';\nimport { toast } from 'react-toastify';\nimport Select from 'react-select';\nimport { makePrivateRequest, makeRequest } from 'core/utils/request';\nimport { useHistory, useParams } from 'react-router-dom';\nimport BaseForm from '../../BaseForm';\nimport './styles.scss';\nimport ImageUpload from '../ImageUpload';\nimport PriceField from './PriceField';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Form = () => {\n  _s();\n\n  const {\n    register,\n    handleSubmit,\n    errors,\n    setValue,\n    control\n  } = useForm();\n  const history = useHistory();\n  const {\n    productId\n  } = useParams();\n  const [isLoadingCategories, setIsLoadingCategories] = useState(false);\n  const [categories, setCategories] = useState([]);\n  const [uploadedImgUrl, setUploadedImgUrl] = useState('');\n  const [productImgUrl, setProductImgUrl] = useState('');\n  const isEditing = productId !== 'create';\n  const formTitle = isEditing ? 'Editar produto' : 'cadastrar um produto';\n  useEffect(() => {\n    if (isEditing) {\n      makeRequest({\n        url: `/products/${productId}`\n      }).then(response => {\n        setValue('name', response.data.name);\n        setValue('price', response.data.price);\n        setValue('description', response.data.description);\n        setValue('categories', response.data.categories);\n        setProductImgUrl(response.data.imgUrl);\n      });\n    }\n  }, [productId, isEditing, setValue]);\n  useEffect(() => {\n    setIsLoadingCategories(true);\n    makeRequest({\n      url: '/categories'\n    }).then(response => setCategories(response.data.content)).finally(() => setIsLoadingCategories(false));\n  }, []);\n\n  const onSubmit = data => {\n    const payload = { ...data,\n      imgUrl: uploadedImgUrl || productImgUrl\n    };\n    makePrivateRequest({\n      url: isEditing ? `/products/${productId}` : '/products',\n      method: isEditing ? 'PUT' : 'POST',\n      data: payload\n    }).then(() => {\n      toast.info('Produto salvo com sucesso!');\n      history.push('/admin/products');\n    }).catch(() => {\n      toast.error('Erro ao salvar produto!');\n    });\n  };\n\n  const onUploadSuccess = imgUrl => {\n    setUploadedImgUrl(imgUrl);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    \"data-testid\": \"products-form\",\n    children: /*#__PURE__*/_jsxDEV(BaseForm, {\n      title: formTitle,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"product-form-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"margin-bottom-30\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              ref: register({\n                required: \"Campo obrigatório\",\n                minLength: {\n                  value: 5,\n                  message: 'O campo deve ter no mínimo 5 caracteres'\n                },\n                maxLength: {\n                  value: 60,\n                  message: 'O campo deve ter no máximo 60 caracteres'\n                }\n              }),\n              name: \"name\",\n              type: \"text\",\n              className: \"form-control input-base\",\n              placeholder: \"Nome do produto\",\n              \"data-testid\": \"name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 15\n            }, this), errors.name && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"invalid-feedback d-block\",\n              children: errors.name.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"margin-bottom-30\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"categories\",\n              className: \"d-none\",\n              children: \"Categorias\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Controller, {\n              as: Select,\n              name: \"categories\",\n              rules: {\n                required: true\n              },\n              control: control,\n              isLoading: isLoadingCategories,\n              options: categories,\n              getOptionLabel: option => option.name,\n              getOptionValue: option => String(option.id),\n              classNamePrefix: \"categories-select\",\n              placeholder: \"Categorias\",\n              inputId: \"categories\",\n              defaultValue: \"\",\n              isMulti: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 15\n            }, this), errors.categories && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"invalid-feedback d-block\",\n              children: \"Campo obrigat\\xF3rio\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"margin-bottom-30\",\n            children: [/*#__PURE__*/_jsxDEV(PriceField, {\n              control: control\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 14\n            }, this), errors.price && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"invalid-feedback d-block\",\n              children: errors.price.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"margin-bottom-30\",\n            children: /*#__PURE__*/_jsxDEV(ImageUpload, {\n              onUploadSuccess: onUploadSuccess,\n              productImgUrl: productImgUrl\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n            ref: register({\n              required: \"Campo obrigatório\"\n            }),\n            name: \"description\",\n            className: \"form-control input-base\",\n            placeholder: \"Descri\\xE7\\xE3o\",\n            cols: 30,\n            rows: 10,\n            \"data-testid\": \"description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 13\n          }, this), errors.description && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"invalid-feedback d-block\",\n            children: errors.description.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Form, \"YLtXpLec9zrOy0WS3XEz3DuQdPg=\", false, function () {\n  return [useForm, useHistory, useParams];\n});\n\n_c = Form;\nexport default Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["C:/projetos/dscatalog-bootcamp-devsuperior/front-web/src/pages/Admin/components/Products/Form/index.tsx"],"names":["React","useEffect","useState","useForm","Controller","toast","Select","makePrivateRequest","makeRequest","useHistory","useParams","BaseForm","ImageUpload","PriceField","Form","register","handleSubmit","errors","setValue","control","history","productId","isLoadingCategories","setIsLoadingCategories","categories","setCategories","uploadedImgUrl","setUploadedImgUrl","productImgUrl","setProductImgUrl","isEditing","formTitle","url","then","response","data","name","price","description","imgUrl","content","finally","onSubmit","payload","method","info","push","catch","error","onUploadSuccess","required","minLength","value","message","maxLength","option","String","id"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useForm, Controller } from 'react-hook-form';\r\nimport { toast } from 'react-toastify';\r\nimport Select from 'react-select';\r\nimport { makePrivateRequest, makeRequest } from 'core/utils/request';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport BaseForm from '../../BaseForm';\r\nimport { Category } from 'core/types/Product';\r\nimport './styles.scss';\r\nimport ImageUpload from '../ImageUpload';\r\nimport PriceField from './PriceField';\r\n\r\nexport type FormState = {\r\n  name: string;\r\n  price: string;\r\n  description: string;\r\n  imgUrl: string;\r\n  categories: Category[];\r\n}\r\n\r\ntype ParamsType = {\r\n  productId: string;\r\n}\r\n\r\nconst Form = () => {\r\n  const { register, handleSubmit, errors, setValue, control } = useForm<FormState>();\r\n  const history = useHistory();\r\n  const { productId } = useParams<ParamsType>();\r\n  const [isLoadingCategories, setIsLoadingCategories] = useState(false);\r\n  const [categories, setCategories] = useState<Category[]>([]);\r\n  const [uploadedImgUrl, setUploadedImgUrl] = useState('');\r\n  const [productImgUrl, setProductImgUrl] = useState('');\r\n\r\n  const isEditing = productId !== 'create';\r\n  const formTitle = isEditing ? 'Editar produto' : 'cadastrar um produto';\r\n\r\n  useEffect(() => {\r\n    if (isEditing) {\r\n      makeRequest({ url: `/products/${productId}` })\r\n        .then(response => {\r\n          setValue('name', response.data.name);\r\n          setValue('price', response.data.price);\r\n          setValue('description', response.data.description);\r\n          setValue('categories', response.data.categories);\r\n\r\n          setProductImgUrl(response.data.imgUrl);\r\n        })\r\n    }\r\n  }, [productId, isEditing, setValue]);\r\n\r\n  useEffect(() => {\r\n    setIsLoadingCategories(true);\r\n    makeRequest({ url: '/categories' })\r\n      .then(response => setCategories(response.data.content))\r\n      .finally(() => setIsLoadingCategories(false));\r\n  }, []);\r\n\r\n  const onSubmit = (data: FormState) => {\r\n    const payload = {\r\n      ...data,\r\n      imgUrl: uploadedImgUrl || productImgUrl\r\n    }\r\n\r\n    makePrivateRequest({\r\n      url: isEditing ? `/products/${productId}` : '/products',\r\n      method: isEditing ? 'PUT' : 'POST',\r\n      data: payload\r\n    })\r\n      .then(() => {\r\n        toast.info('Produto salvo com sucesso!');\r\n        history.push('/admin/products');\r\n      })\r\n      .catch(() => {\r\n        toast.error('Erro ao salvar produto!');\r\n      })\r\n  }\r\n\r\n  const onUploadSuccess = (imgUrl: string) => {\r\n    setUploadedImgUrl(imgUrl);\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit(onSubmit)} data-testid=\"products-form\">\r\n      <BaseForm\r\n        title={formTitle}\r\n      >\r\n        <div className=\"product-form-container\">\r\n          <div className=\"col-6\">\r\n            <div className=\"margin-bottom-30\">\r\n              <input\r\n                ref={register({\r\n                  required: \"Campo obrigatório\",\r\n                  minLength: { value: 5, message: 'O campo deve ter no mínimo 5 caracteres' },\r\n                  maxLength: { value: 60, message: 'O campo deve ter no máximo 60 caracteres' }\r\n                })}\r\n                name=\"name\"\r\n                type=\"text\"\r\n                className=\"form-control input-base\"\r\n                placeholder=\"Nome do produto\"\r\n                data-testid=\"name\"\r\n              />\r\n              {errors.name && (\r\n                <div className=\"invalid-feedback d-block\">\r\n                  {errors.name.message}\r\n                </div>\r\n              )}\r\n            </div>\r\n            <div className=\"margin-bottom-30\">\r\n              <label htmlFor=\"categories\" className=\"d-none\">Categorias</label>\r\n              <Controller\r\n                as={Select}\r\n                name=\"categories\"\r\n                rules={{ required: true }}\r\n                control={control}\r\n                isLoading={isLoadingCategories}\r\n                options={categories}\r\n                getOptionLabel={(option: Category) => option.name}\r\n                getOptionValue={(option: Category) => String(option.id)}\r\n                classNamePrefix=\"categories-select\"\r\n                placeholder=\"Categorias\"\r\n                inputId=\"categories\"\r\n                defaultValue=\"\"\r\n                isMulti\r\n              />\r\n              {errors.categories && (\r\n                <div className=\"invalid-feedback d-block\">\r\n                  Campo obrigatório\r\n                </div>\r\n              )}\r\n            </div>\r\n            <div className=\"margin-bottom-30\">\r\n             <PriceField control={control} />\r\n              {errors.price && (\r\n                <div className=\"invalid-feedback d-block\">\r\n                  {errors.price.message}\r\n                </div>\r\n              )}\r\n            </div>\r\n            <div className=\"margin-bottom-30\">\r\n              <ImageUpload\r\n                onUploadSuccess={onUploadSuccess}\r\n                productImgUrl={productImgUrl}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"col-6\">\r\n            <textarea\r\n              ref={register({ required: \"Campo obrigatório\" })}\r\n              name=\"description\"\r\n              className=\"form-control input-base\"\r\n              placeholder=\"Descrição\"\r\n              cols={30}\r\n              rows={10}\r\n              data-testid=\"description\"\r\n            />\r\n            {errors.description && (\r\n              <div className=\"invalid-feedback d-block\">\r\n                {errors.description.message}\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </BaseForm>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default Form;"]},"metadata":{},"sourceType":"module"}