{"ast":null,"code":"var _jsxFileName = \"C:\\\\projetos\\\\dscatalog-bootcamp-devsuperior\\\\front-web\\\\src\\\\pages\\\\Admin\\\\components\\\\Products\\\\ImageUpload\\\\index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { toast } from \"react-toastify\";\nimport { ReactComponent as UploadPlaceholder } from \"@svgr/webpack?-svgo,+titleProp,+ref!core/assets/images/upload-placeholder.svg\";\nimport { makePrivateRequest } from \"core/utils/request\";\nimport \"./styles.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ImageUpload = _ref => {\n  _s();\n\n  let {\n    onUploadSuccess,\n    productImgUrl\n  } = _ref;\n  const [uploadProgress, setUploadProgress] = useState(0);\n  const [uploadedImgUrl, setUploadedImgUrl] = useState(\"\");\n  const imgUrl = uploadedImgUrl || productImgUrl;\n\n  const onUploadProgress = progressEvent => {\n    const progress = Math.round(progressEvent.loaded * 100 / progressEvent.total);\n    setUploadProgress(progress);\n  };\n\n  const uploadImage = selectedImage => {\n    const payload = new FormData();\n    payload.append(\"file\", selectedImage);\n    makePrivateRequest({\n      url: \"/products/image\",\n      method: \"POST\",\n      data: payload,\n      onUploadProgress\n    }).then(response => {\n      setUploadedImgUrl(response.data.uri);\n      onUploadSuccess(response.data.uri);\n    }).catch(() => {\n      toast.error(\"Erro ao enviar arquivo!\");\n    }).finally(() => setUploadProgress(0));\n  };\n\n  const handleChange = event => {\n    var _event$target$files;\n\n    const selectedImage = (_event$target$files = event.target.files) === null || _event$target$files === void 0 ? void 0 : _event$target$files[0];\n\n    if (selectedImage) {\n      uploadImage(selectedImage);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"upload-button-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          id: \"upload\",\n          accept: \"image/png, image/jpg\",\n          onChange: handleChange,\n          hidden: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"upload\",\n          children: \"ADICIONAR IMAGEM\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n        className: \"upload-text-helper text-primary\",\n        children: [\"As imagens devem ser JPG ou PNG e n\\xE3o devem ultrapassar\", \" \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"5 mb.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"upload-placeholder\",\n      children: [uploadProgress > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(UploadPlaceholder, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"upload-progress-container\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"upload-progress\",\n            style: {\n              width: `${uploadProgress}%`\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true), imgUrl && uploadProgress === 0 && /*#__PURE__*/_jsxDEV(\"img\", {\n        src: imgUrl,\n        alt: imgUrl,\n        className: \"uploaded-image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ImageUpload, \"1qfU9v1CpnyMnXGWH1KUlpFw/n0=\");\n\n_c = ImageUpload;\nexport default ImageUpload;\n\nvar _c;\n\n$RefreshReg$(_c, \"ImageUpload\");","map":{"version":3,"sources":["C:/projetos/dscatalog-bootcamp-devsuperior/front-web/src/pages/Admin/components/Products/ImageUpload/index.tsx"],"names":["React","useState","toast","makePrivateRequest","ImageUpload","onUploadSuccess","productImgUrl","uploadProgress","setUploadProgress","uploadedImgUrl","setUploadedImgUrl","imgUrl","onUploadProgress","progressEvent","progress","Math","round","loaded","total","uploadImage","selectedImage","payload","FormData","append","url","method","data","then","response","uri","catch","error","finally","handleChange","event","target","files","width"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { toast } from \"react-toastify\";\r\nimport { ReactComponent as UploadPlaceholder } from \"core/assets/images/upload-placeholder.svg\"\r\nimport { makePrivateRequest } from \"core/utils/request\";\r\nimport \"./styles.scss\";\r\n\r\ntype Props = {\r\n  onUploadSuccess: (imgUrl: string) => void;\r\n  productImgUrl: string;\r\n};\r\n\r\nconst ImageUpload = ({ onUploadSuccess, productImgUrl }: Props) => {\r\n  const [uploadProgress, setUploadProgress] = useState(0);\r\n  const [uploadedImgUrl, setUploadedImgUrl] = useState(\"\");\r\n  const imgUrl = uploadedImgUrl || productImgUrl;\r\n\r\n  const onUploadProgress = (progressEvent: ProgressEvent) => {\r\n    const progress = Math.round(\r\n      (progressEvent.loaded * 100) / progressEvent.total\r\n    );\r\n\r\n    setUploadProgress(progress);\r\n  };\r\n\r\n  const uploadImage = (selectedImage: File) => {\r\n    const payload = new FormData();\r\n    payload.append(\"file\", selectedImage);\r\n\r\n    makePrivateRequest({\r\n      url: \"/products/image\",\r\n      method: \"POST\",\r\n      data: payload,\r\n      onUploadProgress,\r\n    })\r\n      .then((response) => {\r\n        setUploadedImgUrl(response.data.uri);\r\n        onUploadSuccess(response.data.uri);\r\n      })\r\n      .catch(() => {\r\n        toast.error(\"Erro ao enviar arquivo!\");\r\n      })\r\n      .finally(() => setUploadProgress(0));\r\n  };\r\n\r\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    const selectedImage = event.target.files?.[0];\r\n\r\n    if (selectedImage) {\r\n      uploadImage(selectedImage);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"row\">\r\n      <div className=\"col-6\">\r\n        <div className=\"upload-button-container\">\r\n          <input\r\n            type=\"file\"\r\n            id=\"upload\"\r\n            accept=\"image/png, image/jpg\"\r\n            onChange={handleChange}\r\n            hidden\r\n          />\r\n          <label htmlFor=\"upload\">ADICIONAR IMAGEM</label>\r\n        </div>\r\n        <small className=\"upload-text-helper text-primary\">\r\n          As imagens devem ser JPG ou PNG e não devem ultrapassar{\" \"}\r\n          <strong>5 mb.</strong>\r\n        </small>\r\n      </div>\r\n      <div className=\"upload-placeholder\">\r\n        {uploadProgress > 0 && (\r\n          <>\r\n          <UploadPlaceholder />\r\n            <div className=\"upload-progress-container\">\r\n              <div\r\n                className=\"upload-progress\"\r\n                style={{ width: `${uploadProgress}%` }}\r\n              ></div>\r\n            </div>\r\n          </>\r\n        )}\r\n        {imgUrl && uploadProgress === 0 && (\r\n          <img \r\n          src={imgUrl} \r\n          alt={imgUrl} \r\n          className=\"uploaded-image\" />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImageUpload;\r\n"]},"metadata":{},"sourceType":"module"}