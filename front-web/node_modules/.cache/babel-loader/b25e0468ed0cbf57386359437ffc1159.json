{"ast":null,"code":"var _jsxFileName = \"C:\\\\projetos\\\\dscatalog-bootcamp-devsuperior\\\\front-web\\\\src\\\\core\\\\components\\\\ProductFilters\\\\index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { ReactComponent as SearchIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!core/assets/images/search-icon.svg\";\nimport Select from \"react-select\";\nimport \"./styles.scss\";\nimport { makeRequest } from \"core/utils/request\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ProductFilters = _ref => {\n  _s();\n\n  let {\n    name,\n    handleChangeName,\n    handleChangeCategory,\n    clearFilters,\n    category\n  } = _ref;\n  const [isLoadingCategories, setIsLoadingCategories] = useState(false);\n  const [categories, setCategories] = useState([]);\n  useEffect(() => {\n    setIsLoadingCategories(true);\n    makeRequest({\n      url: \"/categories\"\n    }).then(response => setCategories(response.data.content)).finally(() => setIsLoadingCategories(false));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card-base product-filters-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-search\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: name,\n        className: \"form-control\",\n        placeholder: \"Pesquisar produto\",\n        onChange: event => handleChangeName(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SearchIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Select, {\n      name: \"categories\",\n      value: category,\n      isLoading: isLoadingCategories,\n      options: categories,\n      getOptionLabel: option => option.name,\n      getOptionValue: option => String(option.id),\n      className: \"filter-select-container\",\n      classNamePrefix: \"product-categories-select\",\n      placeholder: \"Categorias\",\n      inputId: \"categories\",\n      onChange: value => handleChangeCategory(value),\n      isClearable: true\n    }, `select-${category === null || category === void 0 ? void 0 : category.id}`, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-outline-secondary border-radius-10\",\n      onClick: clearFilters,\n      children: \"LIMPAR FILTRO\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ProductFilters, \"eCuG5nvFLWH2Bb9jau5WtEs2rIo=\");\n\n_c = ProductFilters;\nexport default ProductFilters;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductFilters\");","map":{"version":3,"sources":["C:/projetos/dscatalog-bootcamp-devsuperior/front-web/src/core/components/ProductFilters/index.tsx"],"names":["React","useEffect","useState","Select","makeRequest","ProductFilters","name","handleChangeName","handleChangeCategory","clearFilters","category","isLoadingCategories","setIsLoadingCategories","categories","setCategories","url","then","response","data","content","finally","event","target","value","option","String","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;AAEA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAO,eAAP;AACA,SAASC,WAAT,QAA4B,oBAA5B;;;AAWA,MAAMC,cAAc,GAAG,QAMV;AAAA;;AAAA,MANW;AACtBC,IAAAA,IADsB;AAEtBC,IAAAA,gBAFsB;AAGtBC,IAAAA,oBAHsB;AAItBC,IAAAA,YAJsB;AAKtBC,IAAAA;AALsB,GAMX;AACX,QAAM,CAACC,mBAAD,EAAsBC,sBAAtB,IAAgDV,QAAQ,CAAC,KAAD,CAA9D;AACA,QAAM,CAACW,UAAD,EAAaC,aAAb,IAA8BZ,QAAQ,CAAa,EAAb,CAA5C;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdW,IAAAA,sBAAsB,CAAC,IAAD,CAAtB;AACAR,IAAAA,WAAW,CAAC;AAAEW,MAAAA,GAAG,EAAE;AAAP,KAAD,CAAX,CACGC,IADH,CACSC,QAAD,IAAcH,aAAa,CAACG,QAAQ,CAACC,IAAT,CAAcC,OAAf,CADnC,EAEGC,OAFH,CAEW,MAAMR,sBAAsB,CAAC,KAAD,CAFvC;AAGD,GALQ,EAKN,EALM,CAAT;AAOA,sBACE;AAAK,IAAA,SAAS,EAAC,qCAAf;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,8BACE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,KAAK,EAAEN,IAFT;AAGE,QAAA,SAAS,EAAC,cAHZ;AAIE,QAAA,WAAW,EAAC,mBAJd;AAKE,QAAA,QAAQ,EAAGe,KAAD,IAAWd,gBAAgB,CAACc,KAAK,CAACC,MAAN,CAAaC,KAAd;AALvC;AAAA;AAAA;AAAA;AAAA,cADF,eAQE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,cARF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAWE,QAAC,MAAD;AACE,MAAA,IAAI,EAAC,YADP;AAGE,MAAA,KAAK,EAAEb,QAHT;AAIE,MAAA,SAAS,EAAEC,mBAJb;AAKE,MAAA,OAAO,EAAEE,UALX;AAME,MAAA,cAAc,EAAGW,MAAD,IAAsBA,MAAM,CAAClB,IAN/C;AAOE,MAAA,cAAc,EAAGkB,MAAD,IAAsBC,MAAM,CAACD,MAAM,CAACE,EAAR,CAP9C;AAQE,MAAA,SAAS,EAAC,yBARZ;AASE,MAAA,eAAe,EAAC,2BATlB;AAUE,MAAA,WAAW,EAAC,YAVd;AAWE,MAAA,OAAO,EAAC,YAXV;AAYE,MAAA,QAAQ,EAAGH,KAAD,IAAWf,oBAAoB,CAACe,KAAD,CAZ3C;AAaE,MAAA,WAAW;AAbb,OAEQ,UAASb,QAAV,aAAUA,QAAV,uBAAUA,QAAQ,CAAEgB,EAAG,EAF9B;AAAA;AAAA;AAAA;AAAA,YAXF,eA0BE;AACE,MAAA,SAAS,EAAC,4CADZ;AAEE,MAAA,OAAO,EAAEjB,YAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YA1BF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAmCD,CApDD;;GAAMJ,c;;KAAAA,c;AAsDN,eAAeA,cAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { ReactComponent as SearchIcon } from \"core/assets/images/search-icon.svg\";\r\nimport Select from \"react-select\";\r\nimport \"./styles.scss\";\r\nimport { makeRequest } from \"core/utils/request\";\r\nimport { Category } from \"core/types/Product\";\r\n\r\ntype Props = {\r\n  name?: string;\r\n  category?: Category;\r\n  handleChangeName: (name: string) => void;\r\n  handleChangeCategory: (category: Category) => void;\r\n  clearFilters: () => void;\r\n};\r\n\r\nconst ProductFilters = ({\r\n  name,\r\n  handleChangeName,\r\n  handleChangeCategory,\r\n  clearFilters,\r\n  category,\r\n}: Props) => {\r\n  const [isLoadingCategories, setIsLoadingCategories] = useState(false);\r\n  const [categories, setCategories] = useState<Category[]>([]);\r\n\r\n  useEffect(() => {\r\n    setIsLoadingCategories(true);\r\n    makeRequest({ url: \"/categories\" })\r\n      .then((response) => setCategories(response.data.content))\r\n      .finally(() => setIsLoadingCategories(false));\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"card-base product-filters-container\">\r\n      <div className=\"input-search\">\r\n        <input\r\n          type=\"text\"\r\n          value={name}\r\n          className=\"form-control\"\r\n          placeholder=\"Pesquisar produto\"\r\n          onChange={(event) => handleChangeName(event.target.value)}\r\n        />\r\n        <SearchIcon />\r\n      </div>\r\n      <Select\r\n        name=\"categories\"\r\n        key={`select-${category?.id}`}\r\n        value={category}\r\n        isLoading={isLoadingCategories}\r\n        options={categories}\r\n        getOptionLabel={(option: Category) => option.name}\r\n        getOptionValue={(option: Category) => String(option.id)}\r\n        className=\"filter-select-container\"\r\n        classNamePrefix=\"product-categories-select\"\r\n        placeholder=\"Categorias\"\r\n        inputId=\"categories\"\r\n        onChange={(value) => handleChangeCategory(value as Category)}\r\n        isClearable\r\n      />\r\n      <button\r\n        className=\"btn btn-outline-secondary border-radius-10\"\r\n        onClick={clearFilters}\r\n      >\r\n        LIMPAR FILTRO\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProductFilters;\r\n"]},"metadata":{},"sourceType":"module"}